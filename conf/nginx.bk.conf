worker_processes  1;
#error_log /dev/stderr warn;

events {
    worker_connections 1024;
}

http {
    #define upstream:
    upstream backend {
            server localhost:81 fail_timeout=5s;
            server localhost:82 fail_timeout=5s;
        
    }
    upstream authAPI {
       
            server localhost:88;
    }
    #end define upstream
    #define server:
    #   http server:
    server {
        
            listen 80;
            server_name trangvhtest.com;
            # location ~ ^/pages/ {
            #     root   pages;
            # }
           
            location ~ ^/api/ {
                #rewrite /auth/api/(.*) /auth/$1  break;
                proxy_pass http://authAPI;
                #root   html;
            }
            location = /favicon.ico {
                            # return 204;
                            # access_log     off;
                            log_not_found  off;
                            root   pages;
            }
            location / {
                #root   pages;
                index pages/index.html; 
                #access_by_lua_file  conf/lua/authenticate.lua;
                # proxy_redirect          off;
                # proxy_next_upstream     error timeout invalid_header http_500;
                # proxy_connect_timeout   2;
                # proxy_set_header        Host            $host;
                # proxy_set_header        X-Real-IP       $remote_addr;
                # proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                # proxy_pass http://backend;
            }
            location /signature {
                set $secret_key 'secret-key';
                set $string_to_sign "some-string-to-sign";
                set_hmac_sha1 $signature $secret_key $string_to_sign;
                set_encode_base64 $signature $signature;
                echo $signature;
            }

            # key must be of 32 bytes long
            encrypted_session_key "abcdefghijklmnopqrstuvwxyz123456";

            # iv must not be longer than 16 bytes
            #   default: "deadbeefdeadbeef" (w/o quotes)
            encrypted_session_iv "1234567812345678";

            # default: 1d (1 day)
            encrypted_session_expires 2; # in sec

            location /encrypt {
                set $raw 'text to encrypted'; # from the ngx_rewrite module
                set_encrypt_session $session $raw;
                set_encode_base32 $session; # from the ngx_set_misc module

                add_header Set-Cookie 'my_login=$session';  # from the ngx_headers module
                echo $session;
                # your content handler goes here...
            }

            location /decrypt {

                set_decode_base32 $session $cookie_my_login; # from the ngx_set_misc module
                set_decrypt_session $raw $session;

                if ($raw = '') {
                    # bad session
                }
                echo $cookie_my_login;
                echo $session;
                echo $raw;
                # your content handler goes here...
            }

            location /pages/auth/ {
            return 301 https://trangvhtest.com$request_uri;
            }
            location ~ \.css {
                add_header Content-Type text/css;
            }
    }
    #   https server:
    server {        
            listen 443 ssl;
            #server_name example.com www.example.com;
            ssl_certificate      cert.pem;
            ssl_certificate_key  cert.key;
            server_name trangvhtest.com;
        
            location = /favicon.ico {
                # return 204;
                # access_log     off;
                log_not_found  off;
                #root   pages;
            }
            location ~ ^/pages/auth/ {
                #rewrite /pages/(.*) /$1  break;

                #root   pages;
               
              
            }
            
            location ~ \.css {
                    #rewrite /pages/(.*) /$1  break;
                    default_type text/css;
                    #add_header Content-Type text/css;
                }
            location ~ /resources/ {
                location ~* \.(eot|otf|ttf|woff|woff2)$ {
                    add_header Access-Control-Allow-Origin *;
                }
                    #rewrite /pages/(.*) /$1  break;
                    #default_type text/css;
                    #add_header Content-Type text/css;
                }
            location ~ ^/api/ {
                #rewrite /auth/api/(.*) /auth/$1  break;
                proxy_pass http://authAPI;
                #root   html;
            }
          
            location / {
                #return 404;
                return 301 http://trangvhtest.com$request_uri;
            }
    }
    #define server
}
